// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SignUpGenius.Models;

namespace SignUpGenius.Migrations
{
    [DbContext(typeof(AppointmentContext))]
    [Migration("20220322020452_SeededTimes")]
    partial class SeededTimes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("SignUpGenius.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("GroupSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("AppointmentId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            AppointmentId = 1,
                            Date = "3/21/2022",
                            Email = "tracyclan@email.com",
                            GroupName = "Tracy Clan",
                            GroupSize = (byte)15,
                            Phone = "8012223333",
                            Time = "8:00 AM"
                        },
                        new
                        {
                            AppointmentId = 2,
                            Date = "3/21/2022",
                            Email = "kingfam@email.com",
                            GroupName = "King Family",
                            GroupSize = (byte)10,
                            Phone = "8014445555",
                            Time = "9:00 AM"
                        });
                });

            modelBuilder.Entity("SignUpGenius.Models.AppointmentTime", b =>
                {
                    b.Property<int>("TimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("TimeId");

                    b.ToTable("AppointmentTimes");

                    b.HasData(
                        new
                        {
                            TimeId = 1,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "8:00 AM"
                        },
                        new
                        {
                            TimeId = 2,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "9:00 AM"
                        },
                        new
                        {
                            TimeId = 3,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "10:00 AM"
                        },
                        new
                        {
                            TimeId = 4,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "11:00 AM"
                        },
                        new
                        {
                            TimeId = 5,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "12:00 PM"
                        },
                        new
                        {
                            TimeId = 6,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "1:00 PM"
                        },
                        new
                        {
                            TimeId = 7,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "2:00 PM"
                        },
                        new
                        {
                            TimeId = 8,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "3:00 PM"
                        },
                        new
                        {
                            TimeId = 9,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "4:00 PM"
                        },
                        new
                        {
                            TimeId = 10,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "5:00 PM"
                        },
                        new
                        {
                            TimeId = 11,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "6:00 PM"
                        },
                        new
                        {
                            TimeId = 12,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "7:00 PM"
                        },
                        new
                        {
                            TimeId = 13,
                            Available = false,
                            Date = "3/21/2022",
                            Time = "8:00 PM"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
